name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Building & Pushing Docker Image
        run: |
          echo cwd
          echo pwd
          
      - name: Building & Pushing Docker Image
        run: |
          for tools in $(ls -A Docker/);
          do
              folder="Docker/"${tools}
              IMAGE_NAME=${tools}
          
              tmpName="image-$RANDOM"
              docker build $folder --file $folder/Dockerfile --tag $tmpName
              IMAGE_ID=${{ env.REGISTRY }}"/"${{ github.repository }}"/"$IMAGE_NAME
              VERSION="latest"
          
              echo IMAGE_ID=$IMAGE_ID
              echo VERSION=$VERSION
          
              docker tag $tmpName $IMAGE_ID:$VERSION
              docker push $IMAGE_ID:$VERSION
          done;          


